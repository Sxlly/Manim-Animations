#!/user/bin/env python

from big_ol_pile_of_manim_imports import *
import numpy as np

class WhileLoops(Scene):

    def construct(self):

        boolean = TextMobject("Boolean")
        T_text = TextMobject("True").set_color(GREEN)
        F_text = TextMobject("False").set_color(RED)

        var_text = TextMobject("Variable = True").set_color_by_tex("True", GREEN)
        var_text2 = TextMobject("Variable = False").set_color_by_tex("False", RED)

        for_loop1 = TextMobject("for index in range(1,11):")
        for_loop2 = TextMobject("print(index)")
        for_loop3 = TextMobject("1, 2, 3, 4, 5, 6, 7, 8, 9, 10").set_color(YELLOW)

        while_loop1 = TextMobject("While variable is condition:")
        while_loop2 = TextMobject("Do the following...").set_color(YELLOW)

        condition_1 = TextMobject("10").set_color(GREEN)
        variable_1 = TextMobject("Index").set_color(BLUE)
        equals = TextMobject("==")
        less = TexMobject("<")
        greater = TexMobject(">")

        final_while1 = TextMobject("Variable = 5")
        final_while2 = TexMobject("While Variable > 0:")
        final_while3 = TextMobject("print(variable)")
        final_while4 = TextMobject("Variable -= 1")

        final_result = TextMobject("5, 4, 3, 2, 1....").set_color(YELLOW)
        final_text1 = TextMobject("The Variable Is No Longer Greater Than 0")
        final_text2 = TextMobject("Which Is Why The Loop Stopped")

        boolean.scale(2)
        T_text.scale(2)
        F_text.scale(2)
        var_text.scale(2)
        var_text2.scale(2)
        for_loop1.scale(1)
        for_loop2.scale(1)
        for_loop3.scale(1)
        while_loop1.scale(1)
        while_loop2.scale(1)
        condition_1.scale(2)
        variable_1.scale(2)
        equals.scale(2)
        less.scale(2)
        greater.scale(2)

        self.play(Write(boolean), run_time=2)
        self.wait(3)
        self.play(boolean.shift, 2*UP)
        self.wait(1)
        self.play(FadeIn(T_text))
        self.play(T_text.shift, 2*LEFT)
        self.wait(2)
        self.play(FadeIn(F_text))
        self.play(F_text.shift, 2*RIGHT)
        self.wait(3)
        self.play(FadeOut(T_text), FadeOut(F_text))
        self.wait(1)
        self.play(ReplacementTransform(boolean, var_text))
        self.wait(3)
        self.play(ReplacementTransform(var_text, var_text2))
        self.wait(2)
        self.play(FadeOutAndShiftDown(var_text2))
        self.wait(2)
        self.play(Write(for_loop1), run_time=2)
        self.play(for_loop1.shift, 2*UP)
        self.play(for_loop1.shift, 0.5*LEFT)
        self.wait(1)
        self.play(Write(for_loop2), run_time=2)
        self.play(for_loop2.shift, 1*RIGHT)
        self.play(for_loop2.shift, 1*UP)
        self.wait(3)
        self.play(FadeInFrom(for_loop3), direction=DOWN)
        self.wait(2)
        self.play(FadeOut(for_loop1), FadeOut(for_loop2))
        self.wait(1)
        self.play(FadeOut(for_loop3))
        self.wait(2)
        self.play(Write(while_loop1), run_time=2)
        self.play(while_loop1.shift, 2*UP)
        self.play(while_loop1.shift, 1*LEFT)
        self.wait(1)
        self.play(Write(while_loop2), run_time=3)
        self.play(while_loop2.shift, 1*UP)
        self.play(while_loop2.shift, 1.5*LEFT)
        self.wait(2)
        self.play(FadeOut(while_loop1))
        self.play(ReplacementTransform(while_loop2, variable_1))
        self.play(variable_1.shift, 2.5*LEFT)
        self.wait(2)
        self.play(Write(condition_1), run_time=2)
        self.play(condition_1.shift, 2*RIGHT)
        self.wait(1)
        self.play(FadeInFrom(equals), direction=UP)
        self.wait(2)
        self.play(ReplacementTransform(equals, less))
        self.wait(2)
        self.play(ReplacementTransform(less, greater))
        self.wait(2)
        self.play(FadeOut(variable_1), FadeOut(condition_1))
        self.wait(1)
        self.play(ReplacementTransform(greater, final_while1))
        self.wait(2)
        self.play(final_while1.shift, 2.5*UP)
        self.play(final_while1.shift, 2.4*LEFT)
        self.wait(2)
        self.play(Write(final_while2), run_time=2)
        self.play(final_while2.shift, 1.5*UP)
        self.play(final_while2.shift, 2*LEFT)
        self.wait(2)
        self.play(Write(final_while3), run_time=2)
        self.play(final_while3.shift, 0.5*UP)
        self.play(final_while3.shift, 2*LEFT)
        self.play(final_while3.shift, 0.8*RIGHT)
        self.wait(2)
        self.play(Write(final_while4), run_time=2)
        self.play(final_while4.shift, 0.5*DOWN)
        self.play(final_while4.shift, 2*LEFT)
        self.play(final_while4.shift, 0.8*RIGHT)
        self.wait(3)
        self.play(Write(final_result), run_time=2)
        self.play(final_result.shift, 2.5*DOWN)
        self.wait(2)
        self.play(FadeOut(final_while1), FadeOut(final_while2), FadeOut(final_while3), FadeOut(final_while4))
        self.wait(1)
        self.play(final_result.shift, 4*UP)
        self.wait(2)
        self.play(Write(final_text1), run_time=2)
        self.wait(2)
        self.play(final_text1.shift, 3*UP)
        self.play(Write(final_text2), run_time=2)
        self.wait(2)
        self.play(final_text2.shift, 0.5*UP)
        self.wait(3)
        self.play(FadeOut(final_result), FadeOut(final_text1), FadeOut(final_text2))
        self.wait(2)




